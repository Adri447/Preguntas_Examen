/*
Subrutinas de GLSL
*/

Una subrutina es un mecanismo que permite seleccionar una función basado en el valor de una variable uniforme. 
Esto sucede en tiempo de ejecución sin necesidad de modificar el programa, ni de instrucciones if.

Para crear una subrutina se utiliza la instrucción subroutine seguida de la declaración del tipo de función. 
Después, para crear una variable uniforme que contenga un puntero a una subrutina se utiliza la instrucción 
subroutine uniform nombresubrutina variable.

Para crear funciones que desarrolla una subrutina, se incluye la instrucción subroutine (subrutinas)
y a continuación la declaración de la función. Para usar una subrutina se utiliza la variable uniforme  
como si fuera una función.

La selección de la subrutina en el programa OpenGL se realiza asignando el valor a la variable
uniforme. Primero se obtiene la posición de la función con glGetSubroutineIndex y, después, a
la variable uniforme se le asigna el valor obtenido mediante glUniformSubroutinesuiv.



/*
¿Qué es un Frame Buffer Object? Describa la forma de crearlo y utilizarlo
*/

Un FrameBuffer Object (FBO) es una estructura de datos que describe la salida del proceso de
renderizado y contiene enlaces al ColorBuffer, DepthBuffer y StencilBuffer. 
Por defecto, OpenGL crea un FBO con identificador 0 que asocia a la pantalla.

Para crear un FBO se utiliza la función glGenFramebuffers, indicándole el número de FBOs a
crear y el array donde están los identificadores. Para activarlo, se utiliza glBindFramebuffer.

Para dirigir el proceso de renderizado a memoria, se crea un FBO y los buffers que estén vinculados a él. 
Para vincular estos buffers al FBO, se utiliza glFramebufferTexture2D si el DepthBuffer está cargado como textura, 
si no, es necesario cargarlo mediante un RenderBuffer. El tamaño de los buffers debe ser el mismo. 

Una vez vinculados, se activa el FBO. Por último, se indica que el FBO será el buffer de dibujo mediante glDrawBuffers. 
Después hay que devolver la salida del renderizado a la pantalla.
