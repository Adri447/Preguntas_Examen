


/*
Describa brevemente las etapas del proceso de renderizado utilizado en OpenGL. (Un párrafo para cada etapa)
*/

Etapas del proceso de renderizado:
- VertexShader: se ejecuta sobre cada vértice de forma independiente. Utiliza atributos de
entrada asociados a cada vértice y genera como salida la posición del vértice en
coordenadas clip.
• Entrada: vértices.
• Salida: transformed vértices, transform feedback

- Ensamblado de primitivas: es una etapa no programable. Recibe la indicación de las
primitivas a dibujar y los atributos de los vértices que las forman, generados por el
VertexShader. Además, detecta si están ocultos o fuera del área de dibujo.
• Entrada: transformed vértices, primitive/patch conectivity.
• Salida: primitives, patches

- Teselado: recibe los datos de un parche y genera nuevas primitivas. Se divide en:
    - Control de teselado (TCS): recibe los vértices del patch y genera los valores de los
      vértices de las primitivas que se crearán.
    - Generación de primitivas (TPG): genera las primitivas en un espacio de coordenadas
      llamado espacio de parámetros, sus coordenadas se denominan u y v, que van de 0 a 1.
    - Evaluación de teselado (TES): transforma las coordenadas del espacio de parámetros
      a coordenadas de posición de los vértices (clip).
• Entrada: patches.
• Salida: primitives, transform feedback.

- GeometryShader: es una etapa opcional. Recibe primitivas ya ensambladas y permite realizarç
modificaciones sobre ellas. La información adyacente debe tratarse dentro de este shader
• Entrada: primitives.
• Saldia: primitives,transform feedback

- Rasterización e interpolación: es una etapa no programable. Estudia qué vértices quedan
dentro del clipping volumen, desechando aquellos que estén fuera, y adaptando las
primitivas que estén parcialmente fuera a través de nuevos vértices. Después, se identifican
qué pixeles forman parte de la primitiva a dibujar según la ubicación del centro del píxel.
• Entrada: primitives.
• Salida: fragments

- FragmentShader: Etapa programable y no opcional, se ejecuta por cada píxel dentro de la primitiva, 
recibiendo los valores interpolados para el píxel. Genera el color asociado al píxel.
• Entrada: fragments.
• Salida: shaded fragments

- Operaciones de raster: Etapa no programable que combina los diferentes fragmentos para generar 
la versión final de la imagen. Algunos de los procesos incluidos en esta etapa 
pueden ser ejecutados antes del FragmentShader por motivos de eficiencia.
• Entrada: shaded fragments.
• Salida: pixels

El proceso de renderizado genera al final el contenido de la imagen en una estructura que
conoceremos como Color Buffer.






/*
Dentro del Pipeline de renderizado, la etapa de ensamblado de primitivas se lanza por medio
de los comandos glDraw...(). ¿Cuáles son las diferentes primitivas geométricas incluidas en
OpenGL? ¿Cómo se distingue la cara frontal de la cara posterior de los polígonos?
*/


Las primitivas incluidas en OpenGL son:
- Punto, compuesto por un único vértice.
- Línea, que une dos vértices.
- Triángulo, formado por tres vértices. Es la forma de primitiva más utilizada.
- Parche. No tienen un significado geométrico definido. Es un tipo especial de primitiva que
se utiliza en los shaders de teselado, donde se convierte la información del parche en un
conjunto de primitivas geométricas.

Salvo las primitivas de tipo parche, que se convierten en otras primitivas tras la etapa de
teselado, todas pueden ser tratadas directamente por el Fragment Shader, a no ser que estén
definidas como primitivas de adyacencia. Estas primitivas son aquellas que comparten aristas
con otras primitivas, pero una de ellas se observa desde su cara frontal y la otra desde su cara
posterior.

Para distinguir entre la cara frontal y posterior de una primitiva, se obtiene el vector normal de
la primitiva. Este es un vector perpendicular a la superficie de la primitiva, y si su dirección en
el eje z es positiva, entonces el triángulo está viéndose desde su cara frontal, si es negativa,
desde su cara posterior.
De forma más simple, la cara que se ve es la frontal si los vértices que componen la primitiva,
en el momento de representarse, siguen un recorrido en sentido antihorario.
