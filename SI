

/*
Define Agente y describe los tipos según racionalidad
*/

Un agente es todo aquello que es capaz de percibir su entorno mediante sensores y actúa sobre él 
a través de efectores. Los agentes inteligentes son autónomos, es decir, pueden tomar la iniciativa 
para conseguir objetivos. Además, son capaces de interactuar con otros agentes mediante algún lenguaje.

Tipos de Agentes.
- Agentes reactivos: seleccionan una acción en función de la percepción actual. se implementan
mediante reglas condicción-acción.
- Agentes reactivos basados en modelos: estos agentes mantienen un estado interno que se actualiza a lo 
largo del tiempo. Utiliza un modelo del mundo y un conjunto de reglas. Se usa en entornos parcialmente observables.
- Agentes basados en objetivos: buscan lograr ciertos objetivos. Se utilizan estrategias de búsqueda y de 
planificación. Tienen en cuenta el futuro.
- Agentes basados en utilidad: hacen uso de una función de utilidad que permite correlacionar un estado 
con un número real que indica el grado de satisfacción.
- Agentes aprendices: poseen un elemento de aprendizaje que mejora el rendimiento de la gente.
La elección de la acción se hace en función de las percepciones y del elemento de aprendizaje.


/*
Entorno y cómo se clsifica
*/

El entorno de un agente es el medioambiente al que se ajusta el agente. Es el escenario donde el agente ç
ejecutará sus acciones mediante sus efectores.

- Accesibles o no accesibles: si los sensores detectan los aspectos que requiere el agente para elegir una acción 
- Deterministas o no deterministas: si el estado siguiente se puede determinar completamente en función del 
estado actual y las acciones escogidas por el agente.
- Episódicos o no episódicos: si la experiencia de la gente se divide en episodios. Cada acción corresponde a las 
percepciones de un único episodio.
- Estáticos o dinámicos: si el entorno no varía mientras el agente está decidiendo.
- Discreto o continuo: si hay una cantidad limitada de percepciones y acciones distintas y distinguibles.


/*
Diferencia Pregramación basada en Agentes y Programacion Orientada a Objetos
*/

La programación orientada a objetos POO permite crear entidades que sean capaces de controlar su estado pero 
no su comportamiento. En cambio la programación basada en agentes PBA permite controlar ambas características.

En PBA el agente capaz de rechazar la ejecución de una acción, sin embargo en POO un método será ejecutado 
siempre que sea invocado. 

Además en POO la decisión de ejecutar un método viene dada por el objeto que invoca, 
en cambio un agente decide realizar una acción en función de sus intereses.



/*
Tipos fundamentales de Algoritmos
*/
Sin búsqueda:
Se puede predecir el coste computacional: Reglas, Árboles de decisión, Máquinas de Estados
El conocimiento radica en el lógica del código
Con búsqueda:
El coste computacional depende del tamaño del espacio de búsqueda: Minimax, Planificación. A veces Pathfinding
El conocimiento radica en la evaluzación de los estados.



/*
Reglas
*/

Una regla se dispara si sus antecedentes coinciden con algunos de los hechos de la base de datos de hechos.
El disparo de la regla hace que su conclusión se añada a la base de datos de hechos o se realize su acción consecuente.

Razonamiento hacia delante (Forward Chaining).
Razonamiento hacia atrás (Backward Chaining).

El motor de inferencia chequea la lista de reglas y selecciona aquellas que se cumplen. Dentro de este motor se 
podría incluir el mecanismo de resolución de conflictos cuando se pueden aplicar múltiples reglas.


/*
Arboles de Decision
*/

Técnica de IA más básica, fácil de implementar, rápida ejecución, fácil de entender.


/*
Maquina Finita de Estados
*/

Estados: Acciones
Condiciones: Percepción
Transiciones: Pensar

Configuracion inicial: Fácil de codificar, Muy eficiente, Muy difícil de mantener

FMS + Arboles para evitar comprobaciones duplicadas costosas 
FMS jerárquica para simplicar FMS complejo mediante la inclusión de subestados.




/*
Elementos de la Búsqueda en Espacio de Estados
*/

Estado Inicial, Operadores, Prueba de Meta, Coste.


Estrategia No informada: anchura, profundidad
Estrategia Informada (Heurística): voraz, A*.
Poda alfa-beta (MinMax): maximo beneficio mio, minimo beneficio del adversario



/*
Restricciones
*/

Un CSP (Constraint Solving Problem) esta formado por Variables, Dominios, Restricciones.
El objetivo es encontrar un valor para cada variable de manera que se satisfagan todas las restricciones del problema

El algoritmo de Backtraking con chequeo previo (Forward Checking) marca valores de futuros dominios si son inconsistentes.
Las heurísticas en Backtracking buscan reducir el tiempo de búsqueda.

Forward checking es una técnica que mantiene información sobre los posibles valores para las variables por asignar.

El algoritmo AC3 se utiliza para asegurar la consistencia local en un CSP, es un preproceso.



/*
Planificación
*/
Planificación es el proceso de búsqueda y articulación de una secuencia de acciones que permite alcanzar un objetivo. 

La planificación de orden parcial se caracteriza por permitir pasos no ordenados en el plan.
La técnica divide y vencerás se basa en dividir el problema en subproblemas independientes y resolverlos por separado.

STRIPS:
En STRIPS los objetivos son conjunciones de literales positivos.
Una Accion consta de un nombre, precondiciones, una lista de adición y una lista de supresión.
La anomalía de Sussman ejemplifica la dificultad de mantener objetivos independientes.

Principio de mínimo compromiso: Tomar decisiones solo cuando sea estrictamente necesario.
No determinar completamente el orden entre acciones, a no ser que sea estrictamente necesario.

POP:
El conjunto de acciones son los pasos que el plan lleva a cabo, con sus precondiciones y efectos.
Un enlace causal en un plan de orden parcial representa la precedencia entre acciones.
Un conjunto de precondiciones abiertas: aquellas que aún no tienen enlaces causales que las consigan.
Un conflicto en un plan parcial final e una acción que amenaza a un enlace causal existente.

En el algoritmo POP una precondición abierta es una condición necesaria para una acción que aún no ha sido 
satisfecha en el plan.
Para resolverla, se puede:
Agregar una nueva acción que produzca el literal requerido (opción a).
Vincularla mediante un enlace causal a una acción existente que ya produzca ese literal (opción b).

Una amenaza de una acción C sobre un enlace causal A →p→ B se da Cuando C tiene a ¬p en su lista de efectos y 
puede ir después de A y antes de B.

Cuando una acción C amenaza un enlace causal entre A y B, se resuelve la amenaza mediante:
Degradación: Forzar que la acción amenazante C ocurra antes de A, para que no interfiera con el enlace causal.
Promoción: Forzar que la acción amenazante C ocurra después de B, evitando que afecte el enlace causal.

Para que un plan sea considerado final se deben cumplir ciertas condiciones:
No tener precondiciones abiertas (todas deben estar satisfechas).
No tener amenazas sin resolver.
No debe contener ciclos en las restricciones de orden.




/*
POP Planificación de orden parcial
a) ¿Qué es una precondición abierta del mismo?
b) ¿Y una amenaza?
c) ¿Qué es Plan Parcial Final?
d) ¿En qué consiste secuenciar un plan parcial final?
*/

a) Una precondición abierta de un plan parcialmente ordenado es aquella relación entre 2 acciones en las que 
no existen enlaces causales que consiguen dichas precondiciones.

b) Una amenaza es una situación en la que una acción elimina una o varias de las precondiciones 
de otra acción y que no tienen relación de orden entre sí. 

c) Un plan parcial final es un plan parcial en el que no existen ciclos ni precondiciones abiertas y 
sin conflicto entre las acciones del plan.

d) Secuenciar un plan parcial final consiste en generar una lista de acciones que respetan las relaciones 
de orden entre las acciones del plan parcial. Construir un plan secuencial que respete las precedencias obligatorias.




/*
Coordinación
*/
La Coordinación puede ser definida como el proceso de manejo de dependencias entre actividades de diferentes agentes.
Un Agentes es un componente con autonomía, reactividad y proactividad.
La coordinación se vuelve crítica cuando los agentes son heterogéneos y autónomos.

La cooperación es un tipo de coordinación entre agentes no antagonistas.
La negociación es un proceso para resolver conflictos y alcanzar acuerdos entre agentes.

La Coordinación se puede dividir también de forma:
• Coordinación Explicita: Los agentes se comunican planes, objetivos, acciones, estados del mundo, etc...
• Coordinación Implícita: sin comunicación – El entorno actúa como medio de interacción.

La inspiración en sociedades humanas para resolver problemas de coordinación, se denomina Modelos Sociales.

La Coordnación Emergente es cuando los agentes actúan de forma autónoma, sin comunicación ni reglas comunes previas, 
y la coordinación surge espontáneamente de sus interacciones locales e independientes.




/*
Coordinación Centralizada VS Distribuida
*/

La coordinación Centralizada utiliza un agente específico llamado controlador centralizado, mientras que,
la coordinación Distribuida distribuye la carga de trabjo y el control entre todos los agentes del sistema.

Las ventajas de la coordinación centralizada serían el coste, ya que se debe centrar en el agente coordinador
y que se asegurará la coordinación a cambio de perder la autonomiá en los demás agentes, que están 
sometidos a la voluntad del agente coordinador. Una gran desventaja es la gran dependencia que existe sobre 
el agente coordinador, ya que si este colapsa, el sistema también podría hacerlo.

Por otro lado, la coordinación Distribuida tiene un mayor coste ya que todos los agentes deben de poder 
coordinarse entre ellos. Sin embargo, tienen mayor autonomía y si uno falla, el sistema puede recuperarse
sin problemas. No obstante, cuando la resolución del problema es difícil, obtener comportamientos
independientes es irrazonable.



/*
Contract Net
*/

El protocolo ContractNet es un protocolo de asignación y compartición de tareas en Sistemas Multiagentes:

1) Reconocimiento: Un Agente reconoce que tiene un problema y no puede o no quiere solucionarlo solo.
2) Anuncio: El Agente envía una señal a todos los demás agentes del sistema (Broadcast). Esta señal
            debe tener una descripción del problema, junto a las restricciones de este y meta-información.
3) Puja: Los Agentes deciden si participan en la tarea propuesta o no. En caso afirmativo, envían una
         oferta al agente que está pidiendo ayuda.
4) Concurso: El Agente que propone la tarea elige al Agente que realizará dicha tarea.
5) Asignación: El resultado se comunica a todos los agentes que habían enviado ua oferta. El ganador
               puede volver a asignar su tarea o partes de ella a otros agentes.


/*
Comunicación mediante Pizarra
*/

La comunicación mediante pizarra se utiliza en la coordinación de sistemas multiagentes. 
Consiste en una estructura de datos en la que todos los agentes del sistema pueden escribir y leer. 

No permite la concurrencia por lo que es necesario mantener la exclusión mutua para evitar que dos 
agentes puedan acceder al mismo tiempo.


/*
Ontologías
*/

Una clase es un concepto que representa un grupo de objetos con propiedades comunes.
Una instancia es un objeto específico que pertenece a una clase.
El propósito de definir una jerarquía de clases es organizar los conceptos en niveles de generalidad.
Una jerarquía taxonómica en una estructura organizacional que clasifica conceptos en superclases y subclases.












